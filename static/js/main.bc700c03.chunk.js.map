{"version":3,"sources":["components/Layout/Layout.module.css","components/Repositories/Repositories.module.css","views/User/User.module.css","components/Avatar/Avatar.module.css","components/UserDetails/UserDetails.module.css","components/Button/Button.module.css","serviceWorker.js","components/ErrorMessage/ErrorMessage.jsx","stores/UserStore.jsx","components/UserDetails/UserDetails.jsx","components/Layout/Layout.jsx","components/Avatar/Avatar.jsx","stores/RepositoryStore.jsx","icons/Star.js","icons/Search.js","graphql/queries.js","components/Repositories/Repositories.jsx","components/Text/Text.jsx","components/Button/Button.jsx","hooks/useForm/useForm.jsx","hooks/useFetch/useFetch.jsx","views/User/validate.js","views/User/User.jsx","views/Repository/Repository.jsx","App.jsx","index.jsx"],"names":["module","exports","page","header","header__nav","header__nav__link","main","footer","article","article__children","header__title","repositories_list","repositories_list__item","repositories_list__item--header","repositories_list__item--header--title","repositories_list__item--header--stars","username","username__input","username__search","avatar--purpleBorder","avatar","avatar__img","userDetails","userDetails__name","button","Boolean","window","location","hostname","match","ErrorMessage","_ref","error","react_default","a","createElement","components_Text_Text","size","color","text","createContext","UserStore","_this","this","Object","classCallCheck","login","name","avatar_url","bio","email","followers","following","repositories","sort","setUser","userData","getUser","UserDetails","user","data","useContext","UserContext","className","styles","components_Avatar_Avatar","showBorder","bold","secondary","Repositories","headerNav","headerNavLink","articleChildren","WrapperLayout","PublicComponent","props","Layout_Layout","Layout","children","state","href","avatarImg","avatarpurpleBorder","Avatar","concat","src","alt","RepositoryStore","description","stargazers","languages","url","filter","current","setRepository","repoData","getRepository","Star","_this$props","width","height","viewBox","version","xmlnsXlink","d","fill","React","PureComponent","defaultProps","Search","fillRule","GET_REPOSITORIES_BY_USER","gql","_templateObject","repoStore","RepositoryContext","_useState","useState","_useState2","slicedToArray","linkToRedirect","setLinkToRedirect","filters","field","direction","_useState3","_useState4","setFilter","_useState5","_useState6","setCurrent","useEffect","react_router","to","pathname","repository","handleMore","fetchMore","orderBy","variables","first","updateQuery","prev","_ref2","fetchMoreResult","assign","react_apollo_esm","query","_ref3","loading","components_ErrorMessage_ErrorMessage","edges","length","value","onChange","e","target","handleChange","map","x","index","key","id","node","onClick","repo","totalCount","join","primaryLanguage","repositoryDetail","Star_Star","Date","createdAt","toLocaleDateString","pageInfo","hasNextPage","components_Button_Button","greys","Text","core_browser_esm","css","Text_templateObject","Button","type","useForm","initialValues","callback","validate","objectSpread","values","setValues","errors","setErrors","isSubmitting","setSubmitting","keys","currentValues","defineProperty","onSubmitForm","event","preventDefault","useFetch","options","setData","setLoading","setError","_useState7","_useState8","loaded","setLoaded","_fetchUrl","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","next","fetch","sent","status","headers","get","includes","stop","apply","arguments","fetchUrl","validateUsername","User","userStore","_useForm","setUrl","process","_useFetch","_useFetch2","onSubmit","placeholder","Search_Search","components_UserDetails_UserDetails","Repository","useLayoutEffect","Fragment","block","rel","App","path","exact","render","client","ApolloClient","uri","request","operation","setContext","authorization","ReactDOM","react_router_dom","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc700c03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Layout_page__1JPRf\",\"header\":\"Layout_header__kJRl0\",\"header__nav\":\"Layout_header__nav__2hkD6\",\"header__nav__link\":\"Layout_header__nav__link__3d9D-\",\"main\":\"Layout_main__27E1-\",\"footer\":\"Layout_footer__1pvFR\",\"article\":\"Layout_article__2kMZs\",\"article__children\":\"Layout_article__children__3Au2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Repositories_header__3InG9\",\"header__title\":\"Repositories_header__title__26lKa\",\"repositories_list\":\"Repositories_repositories_list__2puMD\",\"repositories_list__item\":\"Repositories_repositories_list__item__S9n-_\",\"repositories_list__item--header\":\"Repositories_repositories_list__item--header__3hs7C\",\"repositories_list__item--header--title\":\"Repositories_repositories_list__item--header--title__2unTq\",\"repositories_list__item--header--stars\":\"Repositories_repositories_list__item--header--stars__2yerm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"username\":\"User_username__plpV2\",\"username__input\":\"User_username__input__fMnfa\",\"username__search\":\"User_username__search__250qw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar--purpleBorder\":\"Avatar_avatar--purpleBorder__A5qhF\",\"avatar\":\"Avatar_avatar__WtpwG\",\"avatar__img\":\"Avatar_avatar__img__3VdY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userDetails\":\"UserDetails_userDetails__2UDfS\",\"avatar\":\"UserDetails_avatar__1rfHu\",\"userDetails__name\":\"UserDetails_userDetails__name__LDTvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Oe0FS\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Text } from \"components\";\n\nconst ErrorMessage = ({ error }) => (\n  <Text size=\"12\" color=\"var(--color-red)\" text={error} />\n);\n\nErrorMessage.propTypes = {\n  error: PropTypes.string.isRequired\n};\n\nexport default ErrorMessage;\n","import { createContext } from \"react\";\n\nexport class UserStore {\n  login = null;\n  name = null;\n  avatar_url = null;\n  bio = null;\n  email = null;\n  followers = null;\n  following = null;\n  repositories = null;\n  sort = null;\n\n  setUser = userData => {\n    this.login = userData.login;\n    this.name = userData.name;\n    this.avatar_url = userData.avatar_url;\n    this.bio = userData.bio;\n    this.email = userData.email;\n    this.followers = userData.followers;\n    this.following = userData.following;\n    this.repositories = userData.repositories;\n    this.sort = userData.sort;\n  };\n\n  getUser = () => ({\n    login: this.login,\n    name: this.name,\n    avatar_url: this.avatar_url,\n    bio: this.bio,\n    email: this.email,\n    followers: this.followers,\n    following: this.following,\n    repositories: this.repositories,\n    sort: this.sort\n  });\n}\n\nexport default createContext(new UserStore());\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Avatar, Repositories, Text } from \"components\";\nimport UserContext from \"stores/UserStore\";\n\nimport styles from \"./UserDetails.module.css\";\n\nconst UserDetails = ({ data: user }) => {\n  const userStore = useContext(UserContext);\n\n  userStore.setUser(user);\n\n  return (\n    <section>\n      <div className={styles.userDetails}>\n        <div className={styles.avatar}>\n          <Avatar data={user} showBorder={true} />\n          <Text bold={true} size=\"16\" text={user.name || user.login} />\n        </div>\n        <br />\n        {user.bio && (\n          <div>\n            <Text bold={true} size=\"14\" text=\"Biografia: \" />\n            <Text bold={true} size=\"14\" text={user.bio} secondary={true} />\n          </div>\n        )}\n        {user.email && (\n          <div>\n            <Text bold={true} size=\"14\" text=\"Email: \" />\n            <Text bold={true} size=\"14\" text={user.email} secondary={true} />\n          </div>\n        )}\n        <div>\n          <Text bold={true} size=\"14\" text=\"Seguidores: \" />\n          <Text bold={true} size=\"14\" text={user.followers} secondary={true} />\n        </div>\n        <div>\n          <Text bold={true} size=\"14\" text=\"Seguindo: \" />\n          <Text bold={true} size=\"14\" text={user.following} secondary={true} />\n        </div>\n        {user.login && <Repositories data={user} />}\n      </div>\n    </section>\n  );\n};\n\nUserDetails.propTypes = {\n  data: PropTypes.any.isRequired\n};\n\nexport default UserDetails;\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"./Layout.module.css\";\r\nimport { Avatar, Text } from \"components\";\r\n\r\nconst {\r\n  page,\r\n  main,\r\n  footer,\r\n  article,\r\n  header,\r\n  header__nav: headerNav,\r\n  header__nav__link: headerNavLink,\r\n  article__children: articleChildren\r\n} = styles;\r\n\r\nconst WrapperLayout = (PublicComponent, props) => (\r\n  <Layout>\r\n    <PublicComponent {...props} />\r\n  </Layout>\r\n);\r\n\r\nconst Layout = ({ children }) => {\r\n  const avatar =\r\n    children.props.location.state && children.props.location.state.avatar_url;\r\n\r\n  return (\r\n    <section className={page}>\r\n      <section className={main}>\r\n        <header className={header}>\r\n          <nav className={headerNav}>\r\n            <a href=\"/\" className={headerNavLink}>\r\n              <Text\r\n                bold={true}\r\n                size=\"24\"\r\n                text=\"Home\"\r\n                color=\"var(--color-white)\"\r\n              />\r\n            </a>\r\n            {avatar && (\r\n              <div>\r\n                <Avatar\r\n                  data={{\r\n                    avatar_url: avatar\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </header>\r\n\r\n        <article className={article}>\r\n          <div className={articleChildren}>{children}</div>\r\n        </article>\r\n      </section>\r\n\r\n      <footer className={footer}>\r\n        <Text bold={true} size=\"24\" text=\"2019\" color=\"var(--color-white)\" />\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport { Layout, WrapperLayout };\r\n","import React from \"react\";\n\nimport styles from \"./Avatar.module.css\";\n\nconst {\n  avatar__img: avatarImg,\n  \"avatar--purpleBorder\": avatarpurpleBorder\n} = styles;\n\nconst Avatar = ({ data, showBorder }) => (\n  <section className={styles.avatar}>\n    <img\n      className={`${avatarImg} ${showBorder ? avatarpurpleBorder : ''}`}\n      src={data.avatar_url}\n      alt=\"Imagem Avatar\"\n    />\n  </section>\n);\n\nexport default Avatar;\n","import { createContext } from \"react\";\n\nexport class RepositoryStore {\n  name = null;\n  description = null;\n  stargazers = null;\n  languages = null;\n  url = null;\n  filter = null;\n  current = null;\n\n  setRepository = repoData => {\n    this.name = repoData.name;\n    this.description = repoData.description;\n    this.stargazers = repoData.stargazers;\n    this.languages = repoData.languages;\n    this.url = repoData.url;\n    this.filter = repoData.filter;\n    this.current = repoData.current;\n  };\n\n  getRepository = () => ({\n    name: this.name,\n    description: this.description,\n    stargazers: this.stargazers,\n    languages: this.languages,\n    url: this.url,\n    filter: this.filter,\n    current: this.current\n  });\n}\n\nexport default createContext(new RepositoryStore());\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Star extends React.PureComponent {\n  render() {\n    const { color, size } = this.props;\n    return (\n      <svg\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n        version=\"1.1\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      >\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" fill={color} />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </svg>\n    );\n  }\n}\n\nStar.defaultProps = {\n  color: \"#FFFFFF\",\n  size: 64\n};\n\nStar.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.number\n};\n\nexport { Star };\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Search extends React.PureComponent {\n  render() {\n    const { color, size } = this.props\n    return (\n      <svg width={size} height={size} viewBox='0 0 24 24'>\n        <path\n          d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'\n          fill={color}\n          fillRule='evenodd'\n        />\n      </svg>\n    )\n  }\n}\n\nSearch.defaultProps = {\n  size: 24,\n  color: \"#000\"\n}\n\nSearch.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string\n}\n\nexport { Search }\n","import gql from 'graphql-tag';\n\nexport const GET_REPOSITORIES_BY_USER = gql`\n    query GetRepos($login: String!, $first: Int!, $orderBy: RepositoryOrderField!, $direction: OrderDirection!){\n        user(login: $login) {\n            repositories(first: $first, orderBy:{ field: $orderBy, direction: $direction}) {\n                totalCount\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        url\n                        createdAt\n                        stargazers {\n                            totalCount\n                        }\n                        languages(first: 20) {\n                            edges {\n                                node {\n                                    name\n                                }  \n                            }\n                        }\n                        primaryLanguage {\n                            name\n                        }\n                    }\n                    cursor\n                }\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n        }\n    }\n`","import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\n\nimport { Button, ErrorMessage, Text } from \"components\";\nimport RepositoryContext from \"stores/RepositoryStore\";\nimport { Star } from \"icons\";\n\nimport { GET_REPOSITORIES_BY_USER } from \"graphql/queries\";\n\nimport styles from \"./Repositories.module.css\";\n\nconst UserDetails = ({ data: user }) => {\n  const repoStore = useContext(RepositoryContext);\n\n  const [linkToRedirect, setLinkToRedirect] = useState(null);\n\n  const filters = [\n    {\n      description: \"Mais estrelas\",\n      field: \"STARGAZERS\",\n      direction: \"DESC\"\n    },\n    {\n      description: \"Menos estrelas\",\n      field: \"STARGAZERS\",\n      direction: \"ASC\"\n    },\n    {\n      description: \"Nome A-Z\",\n      field: \"NAME\",\n      direction: \"ASC\"\n    },\n    {\n      description: \"Nome Z-A\",\n      field: \"NAME\",\n      direction: \"DESC\"\n    }\n  ];\n\n  const [filter, setFilter] = useState(0);\n\n  const [current, setCurrent] = useState(0);\n\n  const repoData = repoStore.getRepository();\n\n  useEffect(() => {\n    if (repoData && repoData.name) {\n      setFilter(repoData.filter);\n      setCurrent(repoData.current);\n    }\n  }, [repoData, setFilter, setCurrent]);\n\n  const repositoryDetail = repo => {\n    const data = {\n      name: repo.node.name,\n      description: repo.node.description,\n      stargazers: repo.node.stargazers.totalCount,\n      languages: repo.node.languages.edges.map(x => x.node.name).join(\", \"),\n      url: repo.node.url,\n      filter,\n      current\n    };\n\n    if (!data.languages && repo.node.primaryLanguage.name) {\n      data.languages = repo.node.primaryLanguage.name;\n    }\n\n    repoStore.setRepository(data);\n    setLinkToRedirect(\"/repository\");\n  };\n\n  if (linkToRedirect) {\n    return (\n      <Redirect\n        to={{\n          pathname: linkToRedirect,\n          state: {\n            repository: repoStore.getRepository(),\n            avatar_url: user.avatar_url\n          }\n        }}\n      />\n    );\n  }\n\n  const handleMore = (data, fetchMore, current, orderBy, direction) => {\n    fetchMore({\n      variables: {\n        first: current + 10,\n        orderBy: orderBy,\n        direction: direction\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          return prev;\n        }\n        return Object.assign(prev, fetchMoreResult);\n      }\n    });\n  };\n\n  const handleChange = (e, data, fetchMore) => {\n    setFilter(e.target.value);\n    handleMore(\n      data,\n      fetchMore,\n      0,\n      filters[e.target.value].field,\n      filters[e.target.value].direction\n    );\n  };\n\n  return (\n    <Query\n      query={GET_REPOSITORIES_BY_USER}\n      variables={{\n        login: user.login,\n        first: 10,\n        orderBy: filters[filter].field,\n        direction: filters[filter].direction\n      }}\n    >\n      {({ data, loading, error, fetchMore }) => {\n        if (loading) return \"Carregando Repositórios...\";\n\n        if (error) {\n          return (\n            <ErrorMessage error=\"Desculpe!!! Um erro ocorreu ao processar a busca, por favor tente novamente mais tarde.\" />\n          );\n        }\n\n        if (!data || !data.user) {\n          return null;\n        }\n\n        setCurrent(data.user.repositories.edges.length);\n\n        const repositories = data.user.repositories.edges;\n\n        return (\n          <div>\n            <br />\n            <div className={styles.header}>\n              <span className={styles.header__title}>\n                <Text\n                  bold={true}\n                  size=\"16\"\n                  text={\n                    data.user\n                      ? \"Repositórios\"\n                      : \"Nenhum repositório encontrado.\"\n                  }\n                />\n              </span>\n              <Text\n                bold={true}\n                size=\"14\"\n                text=\"Ordenar por&nbsp;\"\n                secondary={true}\n              />\n              <select\n                value={filter}\n                onChange={e => handleChange(e, data, fetchMore)}\n              >\n                {filters.map((x, index) => (\n                  <option key={index} value={index}>\n                    {x.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <ul id=\"repositories\" className={styles.repositories_list}>\n              {repositories.map(x => (\n                <li\n                  key={x.node.id}\n                  onClick={() => repositoryDetail(x)}\n                  className={styles.repositories_list__item}\n                >\n                  <div className={styles[\"repositories_list__item--header\"]}>\n                    <span\n                      className={\n                        styles[\"repositories_list__item--header--title\"]\n                      }\n                    >\n                      <Text bold={true} size=\"14\" text=\"Nome \" />\n                      <Text\n                        bold={true}\n                        size=\"14\"\n                        text={x.node.name}\n                        secondary={true}\n                      />\n                    </span>\n                    <span\n                      className={\n                        styles[\"repositories_list__item--header--stars\"]\n                      }\n                    >\n                      <Star color=\"var(--color-purple)\" size={20} />\n                      <Text\n                        bold={true}\n                        size=\"16\"\n                        text={x.node.stargazers.totalCount}\n                        secondary={true}\n                      />\n                    </span>\n                  </div>\n                  <div>\n                    <Text bold={true} size=\"14\" text=\"Criado em \" />\n                    <Text\n                      bold={true}\n                      size=\"14\"\n                      text={new Date(x.node.createdAt).toLocaleDateString()}\n                      secondary={true}\n                    />\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {data.user.repositories.pageInfo.hasNextPage && (\n              <Button\n                text=\"Carregar mais\"\n                onClick={() =>\n                  handleMore(\n                    data,\n                    fetchMore,\n                    current,\n                    filters[filter].field,\n                    filters[filter].direction\n                  )\n                }\n              />\n            )}\n          </div>\n        );\n      }}\n    </Query>\n  );\n};\n\nUserDetails.propTypes = {\n  data: PropTypes.any.isRequired\n};\n\nexport default UserDetails;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\n\nconst greys = {\n  primary: \"#494c4d\",\n  secondary: \"#8d9496\"\n};\n\nconst Text = ({ bold, size, text, color, secondary }) => (\n  <span\n    css={css`\n      color: ${color ? color : secondary ? greys.secondary : greys.primary};\n      margin: 0;\n      min-height: 20px;\n      font-size: ${size}px;\n      font-weight: ${bold ? \"bold\" : \"normal\"};\n      font-style: normal;\n      font-stretch: normal;\n      line-height: 1.43;\n      letter-spacing: normal;\n    `}\n  >\n    {text}\n  </span>\n);\n\nText.propTypes = {\n  bold: PropTypes.bool,\n  secondary: PropTypes.bool\n};\n\nText.defaultProps = {\n  size: 12\n};\n\nexport default Text;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Button.module.css\";\n\nconst Button = ({ text, onClick }) => (\n  <button type=\"submit\" className={styles.button} onClick={onClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired\n};\n\nexport default Button;\n","import { useState, useEffect } from \"react\";\n\nconst useForm = (initialValues, callback, validate) => {\n  const [values, setValues] = useState({ ...initialValues });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback(values);\n    }\n  }, [callback, errors, isSubmitting, values]);\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    setSubmitting(true);\n    setErrors(validate(values));\n  };\n\n  const clearCurrentErrors = current => {\n    delete errors[current];\n    setErrors(errors);\n  };\n\n  const handleChange = ({ name, value }) => {\n    setSubmitting(false);\n    clearCurrentErrors(name);\n    setValues(currentValues => ({\n      ...currentValues,\n      [name]: value\n    }));\n  };\n\n  return {\n    handleChange,\n    onSubmitForm,\n    values,\n    errors,\n    setErrors\n  };\n};\n\nexport default useForm;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, options) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchUrl() {\n      const response = await fetch(url, options);\n\n      if (response.status === 500) {\n        setError(true);\n      }\n\n      var contentType = response.headers.get(\"content-type\");\n\n      if (contentType.includes(\"application/json\")) {\n        const json = await response.json();\n        setData(json);\n      }\n\n      setLoaded(true);\n      setLoading(false);\n    }\n\n    setLoading(false);\n\n    if (url) {\n      setLoaded(false);\n      setLoading(true);\n      fetchUrl();\n    }\n  }, [url, options]);\n\n  return [data, loading, error, loaded, setData];\n};\n\nexport default useFetch;\n","const validateUsername = ({ username }) => {\n  const errors = {};\n\n  const re = /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/g;\n\n  if (!username.match(re)) {\n    errors.username = \"Username inválido\";\n  }\n\n  return errors;\n};\n\nexport { validateUsername };\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useForm, useFetch } from \"hooks\";\nimport { validateUsername } from \"./validate\";\nimport { ErrorMessage, UserDetails, Text } from \"components\";\nimport { Search } from \"icons\";\nimport UserContext from \"stores/UserStore\";\n\nimport styles from \"./User.module.css\";\n\nconst User = () => {\n  const userStore = useContext(UserContext);\n\n  const onValidForm = userData => {\n    setUrl(`${process.env.REACT_APP_GITHUB_API_URL}/users/${values.username}`);\n  };\n  const fields = {\n    username: \"\"\n  };\n\n  const { values, handleChange, errors, onSubmitForm } = useForm(\n    fields,\n    onValidForm,\n    validateUsername\n  );\n\n  const [url, setUrl] = useState(\"\");\n\n  const userData = userStore.getUser();\n\n  let [data, loading, error, loaded, setData] = useFetch(url);\n\n  useEffect(() => {\n    if (!data && userData && userData.login) {\n      setData(userData);\n    }\n  });\n\n  return (\n    <article className={styles.article}>\n      <div>\n        <Text bold={true} size=\"18\" text=\"Busca de usuários do GitHub\" />\n      </div>\n\n      <form onSubmit={onSubmitForm}>\n        <div className={styles.username}>\n          <input\n            type=\"text\"\n            className={styles.username__input}\n            value={values.username}\n            placeholder=\"Username\"\n            onChange={e =>\n              handleChange({ name: \"username\", value: e.target.value })\n            }\n          />\n          <button type=\"submit\" className={styles.username__search}>\n            <Search color=\"var(--color-white)\" />\n          </button>\n        </div>\n\n        {errors.username && <ErrorMessage error={errors.username} />}\n\n        {error && (\n          <ErrorMessage error=\"Desculpe!!! Um erro ocorreu ao processar a busca, por favor tente novamente mais tarde.\" />\n        )}\n\n        {(!data || !data.login) && loaded && (\n          <ErrorMessage error=\"Ops!!! Não encontramos ninguem com esse username, por favor tente outro\" />\n        )}\n      </form>\n\n      {loading && \"Carregando...\"}\n\n      <br />\n\n      {!loading && data && data.login && <UserDetails data={data} />}\n    </article>\n  );\n};\n\nexport default User;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Button, Text } from \"components\"\n\nimport styles from \"./Repository.module.css\";\n\nconst Repository = props => {\n  const [linkToRedirect, setLinkToRedirect] = useState(null);\n\n  const repository = props.location.state && props.location.state.repository; //repoStore.getRepository();\n\n  useLayoutEffect(() => {\n    if (!repository) {\n      return setLinkToRedirect(\"/\");\n    }\n  }, [repository]);\n\n  if (linkToRedirect) {\n    return <Redirect to={linkToRedirect} />;\n  }\n\n  return (\n    <>\n      {repository && (\n        <div className={styles.block}>\n          <Text bold={true} size=\"18\" text={repository.name} />\n          <br />\n          <div>\n            <Text bold={true} size=\"14\" text=\"Descrição: \" />\n            <Text bold={true} size=\"14\" text={repository.description} secondary={true} />\n          </div>\n          <div>\n            <Text bold={true} size=\"14\" text=\"Estrelas: \" />\n            <Text bold={true} size=\"14\" text={repository.stargazers} secondary={true} />\n          </div>\n          <div>\n            <Text bold={true} size=\"14\" text=\"Linguagem: \" />\n            <Text bold={true} size=\"14\" text={repository.languages} secondary={true} />\n          </div>\n          <div>\n            <Text bold={true} size=\"14\" text=\"Url: \" />\n            <a href={repository.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Text bold={true} size=\"14\" text=\"Ver mais no github\" secondary={true} />\n            </a>\n          </div>\n          <br />\n          <br />\n          <br />\n          <Button text=\"Voltar\" onClick={() => setLinkToRedirect(\"/\")} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Repository;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { WrapperLayout } from \"components\";\n\nimport { User, Repository } from \"views\";\n\nimport \"./App.module.css\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        path=\"/repository\"\n        exact\n        render={props => WrapperLayout(Repository, props)}\n      />\n      <Route\n        path=\"/\"\n        exact={true}\n        render={props => WrapperLayout(User, props)}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport App from \"./App\";\n\nimport \"./App.module.css\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GITHUB_API_GRAPHQL,\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${process.env.REACT_APP_GITHUB_TOKEN}`\n      }\n    });\n  }\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={App} />\n      </Switch>\n    </HashRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}