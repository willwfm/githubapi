{"version":3,"sources":["components/Button/Button.module.css","components/Layout/Layout.module.css","serviceWorker.js","components/ErrorMessage/ErrorMessage.jsx","stores/UserStore.jsx","components/UserDetails/UserDetails.jsx","components/Layout/Layout.jsx","components/Avatar/Avatar.jsx","stores/RepositoryStore.jsx","icons/Star.js","icons/Search.js","graphql/queries.js","components/Repositories/Repositories.jsx","components/Text/Text.jsx","components/Button/Button.jsx","hooks/useForm/useForm.jsx","hooks/useFetch/useFetch.jsx","views/User/validate.js","views/User/User.jsx","views/Repository/Repository.jsx","App.jsx","index.jsx","components/Repositories/Repositories.module.css","views/User/User.module.css","components/Avatar/Avatar.module.css","components/UserDetails/UserDetails.module.css"],"names":["module","exports","button","page","header","header__nav","header__nav__link","main","footer","article","article__children","Boolean","window","location","hostname","match","ErrorMessage","_ref","error","react_default","a","createElement","components_Text_Text","size","color","text","createContext","UserStore","_this","this","Object","classCallCheck","login","name","avatar_url","bio","email","followers","following","repositories","sort","setUser","userData","getUser","UserDetails","user","data","useContext","UserContext","className","styles","userDetails","avatar","components_Avatar_Avatar","showBorder","bold","secondary","Repositories","headerNav","headerNavLink","articleChildren","WrapperLayout","PublicComponent","props","Layout_Layout","Layout","children","state","href","avatarImg","avatar__img","avatarpurpleBorder","Avatar","concat","src","alt","RepositoryStore","description","stargazers","languages","url","filter","current","setRepository","repoData","getRepository","Star","_this$props","width","height","viewBox","version","xmlnsXlink","d","fill","React","PureComponent","defaultProps","Search","fillRule","GET_REPOSITORIES_BY_USER","gql","_templateObject","repoStore","RepositoryContext","_useState","useState","_useState2","slicedToArray","linkToRedirect","setLinkToRedirect","filters","field","direction","_useState3","_useState4","setFilter","_useState5","_useState6","setCurrent","useEffect","react_router","to","pathname","repository","handleMore","fetchMore","orderBy","variables","first","updateQuery","prev","_ref2","fetchMoreResult","assign","react_apollo_esm","query","_ref3","loading","components_ErrorMessage_ErrorMessage","edges","length","header__title","value","onChange","e","target","handleChange","map","x","index","key","repositories_list","node","id","onClick","repo","totalCount","join","primaryLanguage","repositoryDetail","repositories_list__item","Star_Star","Date","createdAt","toLocaleDateString","pageInfo","hasNextPage","components_Button_Button","greys","Text","core_browser_esm","css","Text_templateObject","Button","type","useForm","initialValues","callback","validate","objectSpread","values","setValues","errors","setErrors","isSubmitting","setSubmitting","keys","currentValues","defineProperty","onSubmitForm","event","preventDefault","useFetch","options","setData","setLoading","setError","_useState7","_useState8","loaded","setLoaded","_fetchUrl","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","next","fetch","sent","status","headers","get","includes","stop","apply","arguments","fetchUrl","validateUsername","username","User","userStore","_useForm","setUrl","process","_useFetch","_useFetch2","onSubmit","username__input","placeholder","username__search","Search_Search","components_UserDetails_UserDetails","Repository","useLayoutEffect","Fragment","block","rel","App","path","exact","render","time","getTime","payload","iat","exp","iss","token","jwt","encode","client","ApolloClient","uri","request","operation","setContext","authorization","ReactDOM","react_router_dom","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","repositories_list__item--header","repositories_list__item--header--title","repositories_list__item--header--stars","avatar--purpleBorder","userDetails__name"],"mappings":"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","file":"static/js/main.dcd2a801.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Oe0FS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Layout_page__1JPRf\",\"header\":\"Layout_header__kJRl0\",\"header__nav\":\"Layout_header__nav__2hkD6\",\"header__nav__link\":\"Layout_header__nav__link__3d9D-\",\"main\":\"Layout_main__27E1-\",\"footer\":\"Layout_footer__1pvFR\",\"article\":\"Layout_article__2kMZs\",\"article__children\":\"Layout_article__children__3Au2S\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Text } from \"components\";\n\nconst ErrorMessage = ({ error }) => (\n  <Text size=\"12\" color=\"var(--color-red)\" text={error} />\n);\n\nErrorMessage.propTypes = {\n  error: PropTypes.string.isRequired\n};\n\nexport default ErrorMessage;\n","import { createContext } from \"react\";\n\nexport class UserStore {\n  login = null;\n  name = null;\n  avatar_url = null;\n  bio = null;\n  email = null;\n  followers = null;\n  following = null;\n  repositories = null;\n  sort = null;\n\n  setUser = userData => {\n    this.login = userData.login;\n    this.name = userData.name;\n    this.avatar_url = userData.avatar_url;\n    this.bio = userData.bio;\n    this.email = userData.email;\n    this.followers = userData.followers;\n    this.following = userData.following;\n    this.repositories = userData.repositories;\n    this.sort = userData.sort;\n  };\n\n  getUser = () => ({\n    login: this.login,\n    name: this.name,\n    avatar_url: this.avatar_url,\n    bio: this.bio,\n    email: this.email,\n    followers: this.followers,\n    following: this.following,\n    repositories: this.repositories,\n    sort: this.sort\n  });\n}\n\nexport default createContext(new UserStore());\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Avatar, Repositories, Text } from \"components\";\nimport UserContext from \"stores/UserStore\";\n\nimport styles from \"./UserDetails.module.css\";\n\nconst UserDetails = ({ data: user }) => {\n  const userStore = useContext(UserContext);\n\n  userStore.setUser(user);\n\n  return (\n    <section>\n      <div className={styles.userDetails}>\n        <div className={styles.avatar}>\n          <Avatar data={user} showBorder={true} />\n          <Text bold={true} size=\"16\" text={user.name || user.login} />\n        </div>\n        <br />\n        {user.bio && (\n          <div>\n            <Text bold={true} size=\"14\" text=\"Biografia: \" />\n            <Text bold={true} size=\"14\" text={user.bio} secondary={true} />\n          </div>\n        )}\n        {user.email && (\n          <div>\n            <Text bold={true} size=\"14\" text=\"Email: \" />\n            <Text bold={true} size=\"14\" text={user.email} secondary={true} />\n          </div>\n        )}\n        <div>\n          <Text bold={true} size=\"14\" text=\"Seguidores: \" />\n          <Text bold={true} size=\"14\" text={user.followers} secondary={true} />\n        </div>\n        <div>\n          <Text bold={true} size=\"14\" text=\"Seguindo: \" />\n          <Text bold={true} size=\"14\" text={user.following} secondary={true} />\n        </div>\n        {user.login && <Repositories data={user} />}\n      </div>\n    </section>\n  );\n};\n\nUserDetails.propTypes = {\n  data: PropTypes.any.isRequired\n};\n\nexport default UserDetails;\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"./Layout.module.css\";\r\nimport { Avatar, Text } from \"components\";\r\n\r\nconst {\r\n  page,\r\n  main,\r\n  footer,\r\n  article,\r\n  header,\r\n  header__nav: headerNav,\r\n  header__nav__link: headerNavLink,\r\n  article__children: articleChildren\r\n} = styles;\r\n\r\nconst WrapperLayout = (PublicComponent, props) => (\r\n  <Layout>\r\n    <PublicComponent {...props} />\r\n  </Layout>\r\n);\r\n\r\nconst Layout = ({ children }) => {\r\n  const avatar =\r\n    children.props.location.state && children.props.location.state.avatar_url;\r\n\r\n  return (\r\n    <section className={page}>\r\n      <section className={main}>\r\n        <header className={header}>\r\n          <nav className={headerNav}>\r\n            <a href=\"/\" className={headerNavLink}>\r\n              <Text\r\n                bold={true}\r\n                size=\"24\"\r\n                text=\"Home\"\r\n                color=\"var(--color-white)\"\r\n              />\r\n            </a>\r\n            {avatar && (\r\n              <div>\r\n                <Avatar\r\n                  data={{\r\n                    avatar_url: avatar\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </header>\r\n\r\n        <article className={article}>\r\n          <div className={articleChildren}>{children}</div>\r\n        </article>\r\n      </section>\r\n\r\n      <footer className={footer}>\r\n        <Text bold={true} size=\"24\" text=\"2019\" color=\"var(--color-white)\" />\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport { Layout, WrapperLayout };\r\n","import React from \"react\";\n\nimport styles from \"./Avatar.module.css\";\n\nconst {\n  avatar__img: avatarImg,\n  \"avatar--purpleBorder\": avatarpurpleBorder\n} = styles;\n\nconst Avatar = ({ data, showBorder }) => (\n  <section className={styles.avatar}>\n    <img\n      className={`${avatarImg} ${showBorder ? avatarpurpleBorder : ''}`}\n      src={data.avatar_url}\n      alt=\"Imagem Avatar\"\n    />\n  </section>\n);\n\nexport default Avatar;\n","import { createContext } from \"react\";\n\nexport class RepositoryStore {\n  name = null;\n  description = null;\n  stargazers = null;\n  languages = null;\n  url = null;\n  filter = null;\n  current = null;\n\n  setRepository = repoData => {\n    this.name = repoData.name;\n    this.description = repoData.description;\n    this.stargazers = repoData.stargazers;\n    this.languages = repoData.languages;\n    this.url = repoData.url;\n    this.filter = repoData.filter;\n    this.current = repoData.current;\n  };\n\n  getRepository = () => ({\n    name: this.name,\n    description: this.description,\n    stargazers: this.stargazers,\n    languages: this.languages,\n    url: this.url,\n    filter: this.filter,\n    current: this.current\n  });\n}\n\nexport default createContext(new RepositoryStore());\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Star extends React.PureComponent {\n  render() {\n    const { color, size } = this.props;\n    return (\n      <svg\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n        version=\"1.1\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      >\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" fill={color} />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </svg>\n    );\n  }\n}\n\nStar.defaultProps = {\n  color: \"#FFFFFF\",\n  size: 64\n};\n\nStar.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.number\n};\n\nexport { Star };\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Search extends React.PureComponent {\n  render() {\n    const { color, size } = this.props\n    return (\n      <svg width={size} height={size} viewBox='0 0 24 24'>\n        <path\n          d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'\n          fill={color}\n          fillRule='evenodd'\n        />\n      </svg>\n    )\n  }\n}\n\nSearch.defaultProps = {\n  size: 24,\n  color: \"#000\"\n}\n\nSearch.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string\n}\n\nexport { Search }\n","import gql from 'graphql-tag';\n\nexport const GET_REPOSITORIES_BY_USER = gql`\n    query GetRepos($login: String!, $first: Int!, $orderBy: RepositoryOrderField!, $direction: OrderDirection!){\n        user(login: $login) {\n            repositories(first: $first, orderBy:{ field: $orderBy, direction: $direction}) {\n                totalCount\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        url\n                        createdAt\n                        stargazers {\n                            totalCount\n                        }\n                        languages(first: 20) {\n                            edges {\n                                node {\n                                    name\n                                }  \n                            }\n                        }\n                        primaryLanguage {\n                            name\n                        }\n                    }\n                    cursor\n                }\n                pageInfo {\n                    endCursor\n                    hasNextPage\n                }\n            }\n        }\n    }\n`","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Button, ErrorMessage, Text } from \"components\";\r\nimport RepositoryContext from \"stores/RepositoryStore\";\r\nimport { Star } from \"icons\";\r\n\r\nimport { GET_REPOSITORIES_BY_USER } from \"graphql/queries\";\r\n\r\nimport styles from \"./Repositories.module.css\";\r\n\r\nconst UserDetails = ({ data: user }) => {\r\n  const repoStore = useContext(RepositoryContext);\r\n\r\n  const [linkToRedirect, setLinkToRedirect] = useState(null);\r\n\r\n  const filters = [\r\n    {\r\n      description: \"Mais estrelas\",\r\n      field: \"STARGAZERS\",\r\n      direction: \"DESC\"\r\n    },\r\n    {\r\n      description: \"Menos estrelas\",\r\n      field: \"STARGAZERS\",\r\n      direction: \"ASC\"\r\n    },\r\n    {\r\n      description: \"Nome A-Z\",\r\n      field: \"NAME\",\r\n      direction: \"ASC\"\r\n    },\r\n    {\r\n      description: \"Nome Z-A\",\r\n      field: \"NAME\",\r\n      direction: \"DESC\"\r\n    }\r\n  ];\r\n\r\n  const [filter, setFilter] = useState(0);\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const repoData = repoStore.getRepository();\r\n\r\n  useEffect(() => {\r\n    if (repoData && repoData.name) {\r\n      setFilter(repoData.filter);\r\n      setCurrent(repoData.current);\r\n    }\r\n  }, [repoData, setFilter, setCurrent]);\r\n\r\n  const repositoryDetail = repo => {\r\n    const data = {\r\n      name: repo.node.name,\r\n      description: repo.node.description,\r\n      stargazers: repo.node.stargazers.totalCount,\r\n      languages: repo.node.languages.edges.map(x => x.node.name).join(\", \"),\r\n      url: repo.node.url,\r\n      filter,\r\n      current\r\n    };\r\n\r\n    if (!data.languages && repo.node.primaryLanguage.name) {\r\n      data.languages = repo.node.primaryLanguage.name;\r\n    }\r\n\r\n    repoStore.setRepository(data);\r\n    setLinkToRedirect(\"/repository\");\r\n  };\r\n\r\n  if (linkToRedirect) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: linkToRedirect,\r\n          state: {\r\n            repository: repoStore.getRepository(),\r\n            avatar_url: user.avatar_url\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleMore = (data, fetchMore, current, orderBy, direction) => {\r\n    fetchMore({\r\n      variables: {\r\n        first: current + 10,\r\n        orderBy: orderBy,\r\n        direction: direction\r\n      },\r\n      updateQuery: (prev, { fetchMoreResult }) => {\r\n        if (!fetchMoreResult) {\r\n          return prev;\r\n        }\r\n        return Object.assign(prev, fetchMoreResult);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (e, data, fetchMore) => {\r\n    setFilter(e.target.value);\r\n    handleMore(\r\n      data,\r\n      fetchMore,\r\n      0,\r\n      filters[e.target.value].field,\r\n      filters[e.target.value].direction\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Query\r\n      query={GET_REPOSITORIES_BY_USER}\r\n      variables={{\r\n        login: user.login,\r\n        first: 10,\r\n        orderBy: filters[filter].field,\r\n        direction: filters[filter].direction\r\n      }}\r\n    >\r\n      {({ data, loading, error, fetchMore }) => {\r\n        if (loading) return \"Carregando Repositórios...\";\r\n\r\n        if (error) {\r\n          return (\r\n            <ErrorMessage error=\"Desculpe!!! Um erro ocorreu ao processar a busca, por favor tente novamente mais tarde.\" />\r\n          );\r\n        }\r\n\r\n        if (!data || !data.user) {\r\n          return null;\r\n        }\r\n\r\n        setCurrent(data.user.repositories.edges.length);\r\n\r\n        const repositories = data.user.repositories.edges;\r\n\r\n        return (\r\n          <div>\r\n            <br />\r\n            <div className={styles.header}>\r\n              <span className={styles.header__title}>\r\n                <Text\r\n                  bold={true}\r\n                  size=\"16\"\r\n                  text={\r\n                    data.user\r\n                      ? \"Repositórios\"\r\n                      : \"Nenhum repositório encontrado.\"\r\n                  }\r\n                />\r\n              </span>\r\n              \r\n              <select\r\n                value={filter}\r\n                onChange={e => handleChange(e, data, fetchMore)}\r\n              >\r\n                {filters.map((x, index) => (\r\n                  <option key={index} value={index}>\r\n                    {x.description}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <ul className={styles.repositories_list}>\r\n              {repositories.map(x => (\r\n                <li\r\n                  key={x.node.id}\r\n                  onClick={() => repositoryDetail(x)}\r\n                  className={styles.repositories_list__item}\r\n                >\r\n                  <div className={styles[\"repositories_list__item--header\"]}>\r\n                    <span\r\n                      className={\r\n                        styles[\"repositories_list__item--header--title\"]\r\n                      }\r\n                    >\r\n                      <Text bold={true} size=\"14\" text=\"Nome \" />\r\n                      <Text\r\n                        bold={true}\r\n                        size=\"14\"\r\n                        text={x.node.name}\r\n                        secondary={true}\r\n                      />\r\n                    </span>\r\n                    <span\r\n                      className={\r\n                        styles[\"repositories_list__item--header--stars\"]\r\n                      }\r\n                    >\r\n                      <Star color=\"var(--color-purple)\" size={20} />\r\n                      <Text\r\n                        bold={true}\r\n                        size=\"16\"\r\n                        text={x.node.stargazers.totalCount}\r\n                        secondary={true}\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <Text bold={true} size=\"14\" text=\"Criado em \" />\r\n                    <Text\r\n                      bold={true}\r\n                      size=\"14\"\r\n                      text={new Date(x.node.createdAt).toLocaleDateString()}\r\n                      secondary={true}\r\n                    />\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            {data.user.repositories.pageInfo.hasNextPage && (\r\n              <Button\r\n                text=\"Carregar mais\"\r\n                onClick={() =>\r\n                  handleMore(\r\n                    data,\r\n                    fetchMore,\r\n                    current,\r\n                    filters[filter].field,\r\n                    filters[filter].direction\r\n                  )\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nUserDetails.propTypes = {\r\n  data: PropTypes.any.isRequired\r\n};\r\n\r\nexport default UserDetails;\r\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\n\nconst greys = {\n  primary: \"#494c4d\",\n  secondary: \"#8d9496\"\n};\n\nconst Text = ({ bold, size, text, color, secondary }) => (\n  <span\n    css={css`\n      color: ${color ? color : secondary ? greys.secondary : greys.primary};\n      margin: 0;\n      min-height: 20px;\n      font-size: ${size}px;\n      font-weight: ${bold ? \"bold\" : \"normal\"};\n      font-style: normal;\n      font-stretch: normal;\n      line-height: 1.43;\n      letter-spacing: normal;\n    `}\n  >\n    {text}\n  </span>\n);\n\nText.propTypes = {\n  bold: PropTypes.bool,\n  secondary: PropTypes.bool\n};\n\nText.defaultProps = {\n  size: 12\n};\n\nexport default Text;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Button.module.css\";\n\nconst Button = ({ text, onClick }) => (\n  <button type=\"submit\" className={styles.button} onClick={onClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired\n};\n\nexport default Button;\n","import { useState, useEffect } from \"react\";\n\nconst useForm = (initialValues, callback, validate) => {\n  const [values, setValues] = useState({ ...initialValues });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback(values);\n    }\n  }, [callback, errors, isSubmitting, values]);\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    setSubmitting(true);\n    setErrors(validate(values));\n  };\n\n  const clearCurrentErrors = current => {\n    delete errors[current];\n    setErrors(errors);\n  };\n\n  const handleChange = ({ name, value }) => {\n    setSubmitting(false);\n    clearCurrentErrors(name);\n    setValues(currentValues => ({\n      ...currentValues,\n      [name]: value\n    }));\n  };\n\n  return {\n    handleChange,\n    onSubmitForm,\n    values,\n    errors,\n    setErrors\n  };\n};\n\nexport default useForm;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, options) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchUrl() {\n      const response = await fetch(url, options);\n\n      if (response.status === 500) {\n        setError(true);\n      }\n\n      var contentType = response.headers.get(\"content-type\");\n\n      if (contentType.includes(\"application/json\")) {\n        const json = await response.json();\n        setData(json);\n      }\n\n      setLoaded(true);\n      setLoading(false);\n    }\n\n    setLoading(false);\n\n    if (url) {\n      setLoaded(false);\n      setLoading(true);\n      fetchUrl();\n    }\n  }, [url, options]);\n\n  return [data, loading, error, loaded, setData];\n};\n\nexport default useFetch;\n","const validateUsername = ({ username }) => {\n  const errors = {};\n\n  const re = /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/g;\n\n  if (!username.match(re)) {\n    errors.username = \"Username inválido\";\n  }\n\n  return errors;\n};\n\nexport { validateUsername };\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useForm, useFetch } from \"hooks\";\nimport { validateUsername } from \"./validate\";\nimport { ErrorMessage, UserDetails, Text } from \"components\";\nimport { Search } from \"icons\";\nimport UserContext from \"stores/UserStore\";\n\nimport styles from \"./User.module.css\";\n\nconst User = () => {\n  const userStore = useContext(UserContext);\n\n  const onValidForm = userData => {\n    setUrl(`${process.env.REACT_APP_GITHUB_API_URL}/users/${values.username}`);\n  };\n  const fields = {\n    username: \"\"\n  };\n\n  const { values, handleChange, errors, onSubmitForm } = useForm(\n    fields,\n    onValidForm,\n    validateUsername\n  );\n\n  const [url, setUrl] = useState(\"\");\n\n  const userData = userStore.getUser();\n\n  let [data, loading, error, loaded, setData] = useFetch(url);\n\n  useEffect(() => {\n    if (!data && userData && userData.login) {\n      setData(userData);\n    }\n  });\n\n  return (\n    <article className={styles.article}>\n      <div>\n        <Text bold={true} size=\"18\" text=\"Busca de usuários do GitHub\" />\n      </div>\n\n      <form onSubmit={onSubmitForm}>\n        <div className={styles.username}>\n          <input\n            type=\"text\"\n            className={styles.username__input}\n            value={values.username}\n            placeholder=\"Username\"\n            onChange={e =>\n              handleChange({ name: \"username\", value: e.target.value })\n            }\n          />\n          <button type=\"submit\" className={styles.username__search}>\n            <Search color=\"var(--color-white)\" />\n          </button>\n        </div>\n\n        {errors.username && <ErrorMessage error={errors.username} />}\n\n        {error && (\n          <ErrorMessage error=\"Desculpe!!! Um erro ocorreu ao processar a busca, por favor tente novamente mais tarde.\" />\n        )}\n\n        {(!data || !data.login) && loaded && (\n          <ErrorMessage error=\"Ops!!! Não encontramos ninguem com esse username, por favor tente outro\" />\n        )}\n      </form>\n\n      {loading && \"Carregando...\"}\n\n      <br />\n\n      {!loading && data && data.login && <UserDetails data={data} />}\n    </article>\n  );\n};\n\nexport default User;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { Button, Text } from \"components\"\n\nimport styles from \"./Repository.module.css\";\n\nconst Repository = props => {\n  const [linkToRedirect, setLinkToRedirect] = useState(null);\n\n  const repository = props.location.state && props.location.state.repository; //repoStore.getRepository();\n\n  useLayoutEffect(() => {\n    if (!repository) {\n      return setLinkToRedirect(\"/\");\n    }\n  }, [repository]);\n\n  if (linkToRedirect) {\n    return <Redirect to={linkToRedirect} />;\n  }\n\n  return (\n    <>\n      {repository && (\n        <div className={styles.block}>\n          <Text bold={true} size=\"18\" text={repository.name} />\n          <br />\n          <div>\n            <Text bold={true} size=\"14\" text=\"Descrição: \" />\n            <Text bold={true} size=\"14\" text={repository.description} secondary={true} />\n          </div>\n          <div>\n            <Text bold={true} size=\"14\" text=\"Estrelas: \" />\n            <Text bold={true} size=\"14\" text={repository.stargazers} secondary={true} />\n          </div>\n          <div>\n            <Text bold={true} size=\"14\" text=\"Linguagem: \" />\n            <Text bold={true} size=\"14\" text={repository.languages} secondary={true} />\n          </div>\n          <div>\n            <Text bold={true} size=\"14\" text=\"Url: \" />\n            <a href={repository.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Text bold={true} size=\"14\" text=\"Ver mais no github\" secondary={true} />\n            </a>\n          </div>\n          <br />\n          <br />\n          <br />\n          <Button text=\"Voltar\" onClick={() => setLinkToRedirect(\"/\")} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Repository;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { WrapperLayout } from \"components\";\n\nimport { User, Repository } from \"views\";\n\nimport \"./App.module.css\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        path=\"/repository\"\n        exact\n        render={props => WrapperLayout(Repository, props)}\n      />\n      <Route\n        path=\"/\"\n        exact={true}\n        render={props => WrapperLayout(User, props)}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport jwt from 'jsonwebtoken';\n\nimport App from \"./App\";\n\nimport \"./App.module.css\";\n\nconst time = new Date().getTime();\n\n//# Generate the JWT\nconst payload = {\n  // # issued at time\n  iat: time,\n  // # JWT expiration time (10 minute maximum)\n  exp: time + 10 * 60,\n  // # GitHub App's identifier\n  iss: 36295\n};\n\nconst token = jwt.encode(payload, process.env.REACT_APP_GITHUB_PRIVATE_KEY, \"RS256\");\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GITHUB_API_GRAPHQL,\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={App} />\n      </Switch>\n    </HashRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Repositories_header__3InG9\",\"header__title\":\"Repositories_header__title__26lKa\",\"repositories_list\":\"Repositories_repositories_list__2puMD\",\"repositories_list__item\":\"Repositories_repositories_list__item__S9n-_\",\"repositories_list__item--header\":\"Repositories_repositories_list__item--header__3hs7C\",\"repositories_list__item--header--title\":\"Repositories_repositories_list__item--header--title__2unTq\",\"repositories_list__item--header--stars\":\"Repositories_repositories_list__item--header--stars__2yerm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"username\":\"User_username__plpV2\",\"username__input\":\"User_username__input__fMnfa\",\"username__search\":\"User_username__search__250qw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar--purpleBorder\":\"Avatar_avatar--purpleBorder__A5qhF\",\"avatar\":\"Avatar_avatar__WtpwG\",\"avatar__img\":\"Avatar_avatar__img__3VdY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userDetails\":\"UserDetails_userDetails__2UDfS\",\"avatar\":\"UserDetails_avatar__1rfHu\",\"userDetails__name\":\"UserDetails_userDetails__name__LDTvN\"};"],"sourceRoot":""}